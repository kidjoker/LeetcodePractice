Binary Tree Level Order Traversal - LeetCode
#Leetcode

解题思路
	1.	BFS通常使用Queue
	2.	queue只存储本层的node，然后每次读取出一个node放到list中，就会把node的两个子节点加到queue之中
	3.	把本层的node取出完，这样queue留的只有下一层的所有节点
	4.	重复上一个步骤就实现按照分层分组

代码
public List<List<Integer>> levelOrder(TreeNode root) {
        List<List<Integer>> result = new ArrayList<>();
        if(root == null){ return result; }
        
        Queue<TreeNode> queue = new LinkedList<>();
        queue.offer(root);
        
        while(!queue.isEmpty()){
            int size = queue.size();
            List<Integer> curList = new ArrayList<>();
            
            for(int i = 0; i < size; i++){
                TreeNode takeOne = queue.poll();
                curList.add(takeOne.val);
                if(takeOne.left != null){
                    queue.offer(takeOne.left);
                }
                if(takeOne.right != null){
                    queue.offer(takeOne.right);
                }
            }
            
            result.add(curList);
        }
        
        return result;
    }